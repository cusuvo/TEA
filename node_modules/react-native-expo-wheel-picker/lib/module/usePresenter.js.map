{"version":3,"sources":["usePresenter.ts"],"names":["useCallback","useState","findIndex","isUndefined","itemHeight","usePresenter","initialValue","items","propItems","valueAttribute","labelAttribute","numberOfVisibleRows","map","item","value","label","defaultIndex","currentIndex","setCurrentIndex","onValueChange","event","Math","floor","nativeEvent","contentOffset","y","getRowItemByIndex","index","height"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;AAUA,eAAe,SAASC,YAAT,OAMJ;AAAA,MAN0B;AACnCC,IAAAA,YADmC;AAEnCC,IAAAA,KAAK,EAAEC,SAF4B;AAGnCC,IAAAA,cAHmC;AAInCC,IAAAA,cAJmC;AAKnCC,IAAAA;AALmC,GAM1B;AACT,QAAMJ,KAAK,GAAGC,SAAS,CAACI,GAAV,CAAeC,IAAD,IAAe;AACzC,WAAO;AACLC,MAAAA,KAAK,EAAED,IAAI,CAACJ,cAAD,CADN;AAELM,MAAAA,KAAK,EAAEF,IAAI,CAACH,cAAD;AAFN,KAAP;AAID,GALa,CAAd;AAOA,QAAMM,YAAY,GAAGb,WAAW,CAACG,YAAD,CAAX,GACjB,CADiB,GAEjBJ,SAAS,CAACK,KAAD,EAAQ;AAAEO,IAAAA,KAAK,EAAER;AAAT,GAAR,CAFb;AAIA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAACe,YAAD,CAAhD;AAEA,QAAMG,aAAa,GAAGnB,WAAW,CAAEoB,KAAD,IAAW;AAC3CF,IAAAA,eAAe,CAACG,IAAI,CAACC,KAAL,CAAWF,KAAK,CAACG,WAAN,CAAkBC,aAAlB,CAAgCC,CAAhC,GAAoCrB,UAA/C,CAAD,CAAf;AACD,GAFgC,EAE9B,EAF8B,CAAjC;;AAIA,QAAMsB,iBAAiB,GAAIC,KAAD,IAAmB;AAC3C,WAAOpB,KAAK,CAACoB,KAAD,CAAZ;AACD,GAFD;;AAIA,SAAO;AACLpB,IAAAA,KADK;AAELY,IAAAA,aAFK;AAGLF,IAAAA,YAHK;AAILD,IAAAA,YAAY,EAAEA,YAAY,GAAG,CAAC,CAAhB,GAAoBA,YAApB,GAAmC,CAJ5C;AAKLU,IAAAA,iBALK;AAMLE,IAAAA,MAAM,EAAEjB,mBAAmB,GAAGP;AANzB,GAAP;AAQD","sourcesContent":["// src/usePresenter.ts\nimport { useCallback, useState } from 'react';\nimport findIndex from 'lodash/findIndex';\nimport isUndefined from 'lodash/isUndefined';\nimport { itemHeight } from './constant';\n\ninterface IProps {\n  initialValue: any | undefined;\n  items: any[];\n  valueAttribute: string;\n  labelAttribute: string;\n  numberOfVisibleRows: number;\n}\n\nexport default function usePresenter({\n  initialValue,\n  items: propItems,\n  valueAttribute,\n  labelAttribute,\n  numberOfVisibleRows,\n}: IProps) {\n  const items = propItems.map((item: any) => {\n    return {\n      value: item[valueAttribute],\n      label: item[labelAttribute],\n    };\n  });\n\n  const defaultIndex = isUndefined(initialValue)\n    ? 0\n    : findIndex(items, { value: initialValue });\n\n  const [currentIndex, setCurrentIndex] = useState(defaultIndex);\n\n  const onValueChange = useCallback((event) => {\n    setCurrentIndex(Math.floor(event.nativeEvent.contentOffset.y / itemHeight));\n  }, []);\n\n  const getRowItemByIndex = (index: number) => {\n    return items[index];\n  };\n\n  return {\n    items,\n    onValueChange,\n    currentIndex,\n    defaultIndex: defaultIndex > -1 ? defaultIndex : 0,\n    getRowItemByIndex,\n    height: numberOfVisibleRows * itemHeight,\n  };\n}\n"]}