import React, { ReactElement, JSXElementConstructor } from 'react';
declare enum Direction {
    NONE = 0,
    NORMAL = 1,
    LEFT = 2,
    RIGHT = 3,
    TOP = 4,
    BOTTOM = 5,
    TOP_LEFT = 6,
    TOP_RIGHT = 7,
    BOTTOM_LEFT = 8,
    BOTTOM_RIGHT = 9
}
interface ICropperProps {
    imageWidth: number;
    imageHeight: number;
    originX: number;
    originY: number;
    children: ReactElement<any, string | JSXElementConstructor<any>>;
}
interface ICropperState {
    direction: Direction;
    initialWidth: number;
    initialHeight: number;
    initialLeft: number;
    initialTop: number;
}
declare class Cropper extends React.Component<ICropperProps, ICropperState> {
    private panResponder;
    private gridRef;
    private pan;
    private boxWidth;
    private boxHeight;
    constructor(props: ICropperProps);
    /**
     *
     * Reset the cropper to initial state
     * @memberof Cropper
     */
    reset(): void;
    private onPanResponderEnd;
    private onPanResponderMove;
    private onPanResponderGrant;
    getCroppedData(uri: string): Promise<{
        originX: number;
        originY: number;
        width: number;
        height: number;
    }>;
    private getDirection;
    render(): JSX.Element[];
}
export default Cropper;
