{"version":3,"sources":["rotateImage.ts"],"names":["rotate","uri","saveOptions","ImageManipulator","manipulateAsync","rotateImage","Promise","resolve","reject","Image","getSize","width","height","newUri","base64","size","errors"],"mappings":";;;;;;;AACA;;AACA;;;;;;AAFA;AAaA,eAAeA,MAAf,CACEC,GADF,EAEE;AACA;AACAC,WAJF,EAKyC;AACvC,SAAOC,gBAAgB,CAACC,eAAjB,CACLH,GADK,EAEL,CACE;AACED,IAAAA,MAAM,EAAE,CAAC;AADX,GADF,CAFK,EAOLE,WAPK,CAAP;AASD;;AAEc,SAASG,WAAT,CACbJ,GADa,EAEbC,WAFa,EAGU;AACvB,SAAO,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,uBAAMC,OAAN,CACET,GADF,EAEE,OAAOU,KAAP,EAAcC,MAAd,KAAyB;AACvB,YAAM;AAAEX,QAAAA,GAAG,EAAEY,MAAP;AAAeC,QAAAA;AAAf,UAA0B,MAAMd,MAAM,CAC1CC,GAD0C,EAE1C;AACA;AACAC,MAAAA,WAJ0C,CAA5C;AAMAK,MAAAA,OAAO,CAAC;AACNQ,QAAAA,IAAI,EAAE;AACJJ,UAAAA,KAAK,EAAEC,MADH;AAEJA,UAAAA,MAAM,EAAED;AAFJ,SADA;AAKNV,QAAAA,GAAG,EAAEY,MALC;AAMNC,QAAAA;AANM,OAAD,CAAP;AAQD,KAjBH,EAkBGE,MAAD,IAAYR,MAAM,CAACQ,MAAD,CAlBpB;AAoBD,GArBM,CAAP;AAsBD","sourcesContent":["// rotateImage.ts\nimport { Image } from 'react-native';\nimport * as ImageManipulator from 'expo-image-manipulator';\n\ntype rotatedImage = {\n  uri: string;\n  base64: string | undefined;\n  size: {\n    width: number;\n    height: number;\n  };\n};\n\nasync function rotate(\n  uri: string,\n  // width: number,\n  // height: number,\n  saveOptions: ImageManipulator.SaveOptions\n): Promise<ImageManipulator.ImageResult> {\n  return ImageManipulator.manipulateAsync(\n    uri,\n    [\n      {\n        rotate: -90,\n      },\n    ],\n    saveOptions\n  );\n}\n\nexport default function rotateImage(\n  uri: string,\n  saveOptions: ImageManipulator.SaveOptions\n): Promise<rotatedImage> {\n  return new Promise((resolve, reject) => {\n    Image.getSize(\n      uri,\n      async (width, height) => {\n        const { uri: newUri, base64 } = await rotate(\n          uri,\n          // width,\n          // height,\n          saveOptions\n        );\n        resolve({\n          size: {\n            width: height,\n            height: width,\n          },\n          uri: newUri,\n          base64,\n        });\n      },\n      (errors) => reject(errors)\n    );\n  });\n}\n"]}