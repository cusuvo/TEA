"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = rotateImage;

var _reactNative = require("react-native");

var ImageManipulator = _interopRequireWildcard(require("expo-image-manipulator"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// rotateImage.ts
async function rotate(uri, // width: number,
// height: number,
saveOptions) {
  return ImageManipulator.manipulateAsync(uri, [{
    rotate: -90
  }], saveOptions);
}

function rotateImage(uri, saveOptions) {
  return new Promise((resolve, reject) => {
    _reactNative.Image.getSize(uri, async (width, height) => {
      const {
        uri: newUri,
        base64
      } = await rotate(uri, // width,
      // height,
      saveOptions);
      resolve({
        size: {
          width: height,
          height: width
        },
        uri: newUri,
        base64
      });
    }, errors => reject(errors));
  });
}
//# sourceMappingURL=rotateImage.js.map