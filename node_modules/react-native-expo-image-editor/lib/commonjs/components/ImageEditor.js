"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ImageEditor;

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _expoImageManipulator = require("expo-image-manipulator");

var _Controller = _interopRequireDefault(require("./Controller"));

var _Manipulator = _interopRequireDefault(require("./Manipulator"));

var _Provider = require("./Provider");

var _utils = require("./utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// src/component/ImageEditor.tsx
const styles = _reactNative.StyleSheet.create({
  container: {
    backgroundColor: '#000',
    flex: 1
  },
  previewArea: {
    backgroundColor: 'rgb(22, 22, 22)',
    flex: 1
  },
  modHeader: {
    flexDirection: 'row',
    flex: 1,
    height: 120
  }
});

const {
  width,
  height
} = _reactNative.Dimensions.get('window');

function ImageEditor(props) {
  const {
    source,
    onBack,
    onDone,
    saveOptions
  } = props;
  const [uri, setUri] = (0, _react.useState)(source.uri);
  const [imageSize, setImageSize] = (0, _react.useState)({
    width: 0,
    height: 0
  });

  const handleUpdate = croppedImage => {
    setUri(croppedImage.uri);
  };

  (0, _react.useEffect)(() => {
    (async () => {
      const layout = await (0, _utils.getImageLayout)(uri, width, height - 240);
      setImageSize(layout);
    })();
  }, [uri]);

  const handleDone = async () => {
    onDone(await compressImage(uri));
  };

  const compressImage = async imageUri => {
    const {
      width: imageWidth,
      height: imageHeight
    } = await (0, _utils.getImageSize)(imageUri);
    return (0, _expoImageManipulator.manipulateAsync)(imageUri, [{
      resize: {
        width: imageWidth,
        height: imageHeight
      }
    }], saveOptions);
  };

  return /*#__PURE__*/_react.default.createElement(_Provider.Provider, {
    uri: uri
  }, /*#__PURE__*/_react.default.createElement(_reactNative.SafeAreaView, {
    style: styles.container
  }, /*#__PURE__*/_react.default.createElement(_Controller.default, {
    onBack: onBack,
    onDone: handleDone
  }, /*#__PURE__*/_react.default.createElement(_reactNative.ImageBackground, {
    source: {
      uri
    },
    style: {
      width: imageSize.width,
      height: imageSize.height
    }
  })), /*#__PURE__*/_react.default.createElement(_Manipulator.default, {
    uri: uri,
    onUpdate: handleUpdate
  })));
}
//# sourceMappingURL=ImageEditor.js.map