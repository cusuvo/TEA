"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Manipulator;

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _expoImageManipulator = require("expo-image-manipulator");

var _FadeView = _interopRequireDefault(require("./FadeView"));

var _Label = _interopRequireDefault(require("./Label"));

var _Provider = require("./Provider");

var _Row = _interopRequireDefault(require("./Row"));

var _utils = require("./utils");

var _Cropper = _interopRequireDefault(require("./Cropper"));

var _Manipulator = _interopRequireDefault(require("../styles/Manipulator.style"));

var _cropImage = _interopRequireDefault(require("../functions/cropImage"));

var _rotateImage = _interopRequireDefault(require("../functions/rotateImage"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const {
  width,
  height
} = _reactNative.Dimensions.get('window');

const AnimatedImageBackground = _reactNative.Animated.createAnimatedComponent(_reactNative.ImageBackground);

const options = {
  compress: 1,
  format: _expoImageManipulator.SaveFormat.JPEG,
  base64: false
};

function Manipulator(props) {
  const {
    uri,
    onUpdate
  } = props;
  const [imageUri, setImageUri] = (0, _react.useState)(uri);
  const cropperRef = (0, _react.useRef)(null);
  const [imageSize, setImageSize] = (0, _react.useState)({
    width: 0,
    height: 0
  });
  const [originXY, setOriginXY] = (0, _react.useState)({
    x: 0,
    y: 0
  });
  const {
    // saveOptions,
    manipulator: {
      visible,
      setVisible
    }
  } = (0, _Provider.useProvider)(); // shouldSetNewImageSize

  (0, _react.useEffect)(() => {
    (async () => {
      const resized = await (0, _utils.getImageLayout)(imageUri, width, height - 240);
      setImageSize(resized);
      resetCropper();
    })();
  }, [imageUri]);

  const handleDone = async () => {
    if (cropperRef && cropperRef.current) {
      const croppedImage = await (0, _cropImage.default)(imageUri, await cropperRef.current.getCroppedData(imageUri), options);
      onUpdate(croppedImage);
      setImageUri(croppedImage.uri);
      setVisible(false);
    }
  };

  const handleRotate = async () => {
    const rotatedResult = await (0, _rotateImage.default)(imageUri, options);
    setImageUri(rotatedResult.uri);
  };

  const handleReset = () => {
    resetCropper();
  };

  const resetCropper = () => {
    if (cropperRef && cropperRef.current) cropperRef.current.reset();
  };

  const onLayout = event => {
    const {
      width: layoutWidth,
      height: layoutHeight
    } = event.nativeEvent.layout;
    const x = (width - layoutWidth) / 2;
    const y = (height - layoutHeight) / 2;
    setOriginXY({
      x,
      y
    });
  };

  return /*#__PURE__*/_react.default.createElement(_FadeView.default, {
    visible: visible,
    style: _Manipulator.default.fadeView
  }, /*#__PURE__*/_react.default.createElement(_reactNative.SafeAreaView, {
    style: _Manipulator.default.container
  }, /*#__PURE__*/_react.default.createElement(_Row.default, {
    style: _Manipulator.default.header
  }, /*#__PURE__*/_react.default.createElement(_Label.default, {
    onPress: handleReset
  }, "\u91CD\u8A2D"), /*#__PURE__*/_react.default.createElement(_Label.default, {
    onPress: handleDone
  }, "\u5B8C\u6210")), /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: _Manipulator.default.content
  }, imageSize.width && imageSize.height ? /*#__PURE__*/_react.default.createElement(_Cropper.default, {
    ref: cropperRef,
    imageWidth: imageSize.width,
    imageHeight: imageSize.height,
    originX: originXY.x,
    originY: originXY.y
  }, /*#__PURE__*/_react.default.createElement(AnimatedImageBackground, {
    onLayout: onLayout,
    source: {
      uri: imageUri
    },
    style: [{
      width: imageSize.width,
      height: imageSize.height
    }]
  })) : null), /*#__PURE__*/_react.default.createElement(_Row.default, {
    style: _Manipulator.default.footer
  }, /*#__PURE__*/_react.default.createElement(_Label.default, {
    onPress: handleRotate
  }, "\u65CB\u8F49"))));
}
//# sourceMappingURL=Manipulator.js.map