{"version":3,"sources":["GridLine.tsx"],"names":["GridLine","getAnimatedStyle","style","props","pan","panResponder","panHandlers"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,QAAT,CAAkBC,gBAAlB,EAA8CC,KAA9C,EAA0D;AACvE,SAAO,+BAAkBC,KAAD,IAA0B;AAChD,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAwBF,KAA9B;AACA,wBACE,6BAAC,qBAAD,CAAU,IAAV;AACE,MAAA,KAAK,EAAEF,gBAAgB,CAACG,GAAD;AADzB,OAEMC,YAAY,CAACC,WAFnB,gBAIE,6BAAC,iBAAD;AAAM,MAAA,KAAK,EAAEJ;AAAb,MAJF,CADF;AAQD,GAVM,CAAP;AAWD","sourcesContent":["// GridLine/GridLine.tsx\n\nimport React from 'react';\nimport { Animated, View } from 'react-native';\nimport withPanResponder from './withPanResponder';\nimport type { GridLineProps } from './type';\n/**\n *\n *\n * @export\n * @param {Function} getAnimatedStyle\n * @param {*} style\n * @return {*}\n */\nexport default function GridLine(getAnimatedStyle: Function, style: any) {\n  return withPanResponder((props: GridLineProps) => {\n    const { pan, panResponder } = props;\n    return (\n      <Animated.View\n        style={getAnimatedStyle(pan)}\n        {...panResponder.panHandlers}\n      >\n        <View style={style} />\n      </Animated.View>\n    );\n  });\n}\n"]}