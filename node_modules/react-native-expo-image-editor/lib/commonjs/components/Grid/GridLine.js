"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = GridLine;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _withPanResponder = _interopRequireDefault(require("./withPanResponder"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/**
 *
 *
 * @export
 * @param {Function} getAnimatedStyle
 * @param {*} style
 * @return {*}
 */
function GridLine(getAnimatedStyle, style) {
  return (0, _withPanResponder.default)(props => {
    const {
      pan,
      panResponder
    } = props;
    return /*#__PURE__*/_react.default.createElement(_reactNative.Animated.View, _extends({
      style: getAnimatedStyle(pan)
    }, panResponder.panHandlers), /*#__PURE__*/_react.default.createElement(_reactNative.View, {
      style: style
    }));
  });
}
//# sourceMappingURL=GridLine.js.map