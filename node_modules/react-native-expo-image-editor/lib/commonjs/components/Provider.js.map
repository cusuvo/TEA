{"version":3,"sources":["Provider.tsx"],"names":["initialState","imageUri","setImageUri","manipulator","visible","label","setVisible","EditorContext","React","createContext","Provider","props","uri","children","useState","Consumer","useProvider","useContext"],"mappings":";;;;;;;AACA;;;;AADA;AAaA,MAAMA,YAAoB,GAAG;AAC3BC,EAAAA,QAAQ,EAAE,EADiB;AAE3BC,EAAAA,WAAW,EAAE,MAAM,CAAE,CAFM;AAG3BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,OAAO,EAAE,KADE;AAEXC,IAAAA,KAAK,EAAE,QAFI;AAGXC,IAAAA,UAAU,EAAE,MAAM,CAAE;AAHT;AAHc,CAA7B;;AAeO,MAAMC,aAAa,gBAAGC,eAAMC,aAAN,CAAoBT,YAApB,CAAtB;;;;AACA,MAAMU,QAAQ,GAAIC,KAAD,IAA2B;AACjD,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAoBF,KAA1B;;AACA,QAAM,CAACV,QAAD,EAAWC,WAAX,IAA0BM,eAAMM,QAAN,CAAeF,GAAf,CAAhC;;AACA,QAAM,CAACR,OAAD,EAAUE,UAAV,IAAwBE,eAAMM,QAAN,CAAe,KAAf,CAA9B;;AAEA,sBACE,6BAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLb,MAAAA,QADK;AAELC,MAAAA,WAFK;AAGLC,MAAAA,WAAW,EAAE;AACXC,QAAAA,OADW;AAEXE,QAAAA,UAFW;AAGXD,QAAAA,KAAK,EAAE;AAHI;AAHR;AADT,KAWGQ,QAXH,CADF;AAeD,CApBM;;;AAqBA,MAAME,QAAQ,GAAGR,aAAa,CAACQ,QAA/B;;;AACA,MAAMC,WAAW,GAAG,MAAMR,eAAMS,UAAN,CAAiBV,aAAjB,CAA1B","sourcesContent":["// src/components/Provider.tsx\nimport React from 'react';\n\ninterface IState {\n  imageUri: string;\n  setImageUri: React.Dispatch<any>;\n  manipulator: {\n    visible: boolean;\n    label: string;\n    setVisible: React.Dispatch<any>;\n  };\n}\n\nconst initialState: IState = {\n  imageUri: '',\n  setImageUri: () => {},\n  manipulator: {\n    visible: false,\n    label: 'Rotate',\n    setVisible: () => {},\n  },\n};\n\ninterface IProviderProps {\n  children: React.ReactNode;\n  uri: string;\n}\n\nexport const EditorContext = React.createContext(initialState);\nexport const Provider = (props: IProviderProps) => {\n  const { uri, children } = props;\n  const [imageUri, setImageUri] = React.useState(uri);\n  const [visible, setVisible] = React.useState(false);\n\n  return (\n    <EditorContext.Provider\n      value={{\n        imageUri,\n        setImageUri,\n        manipulator: {\n          visible,\n          setVisible,\n          label: '',\n        },\n      }}\n    >\n      {children}\n    </EditorContext.Provider>\n  );\n};\nexport const Consumer = EditorContext.Consumer;\nexport const useProvider = () => React.useContext(EditorContext);\n"]}