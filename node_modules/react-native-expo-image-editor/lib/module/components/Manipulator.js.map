{"version":3,"sources":["Manipulator.tsx"],"names":["React","useState","useEffect","useRef","SafeAreaView","Animated","Dimensions","View","ImageBackground","SaveFormat","FadeView","Label","useProvider","Row","getImageLayout","Cropper","styles","cropImage","rotateImage","width","height","get","AnimatedImageBackground","createAnimatedComponent","options","compress","format","JPEG","base64","Manipulator","props","uri","onUpdate","imageUri","setImageUri","cropperRef","imageSize","setImageSize","originXY","setOriginXY","x","y","manipulator","visible","setVisible","resized","resetCropper","handleDone","current","croppedImage","getCroppedData","handleRotate","rotatedResult","handleReset","reset","onLayout","event","layoutWidth","layoutHeight","nativeEvent","layout","fadeView","container","header","content","footer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  SafeAreaView,\n  Animated,\n  Dimensions,\n  View,\n  ImageBackground,\n  LayoutChangeEvent,\n} from 'react-native';\nimport { SaveFormat } from 'expo-image-manipulator';\nimport FadeView from './FadeView';\nimport Label from './Label';\nimport { useProvider } from './Provider';\nimport Row from './Row';\nimport { getImageLayout } from './utils';\nimport Cropper from './Cropper';\nimport styles from '../styles/Manipulator.style';\nimport cropImage from '../functions/cropImage';\nimport rotateImage from '../functions/rotateImage';\n\nconst { width, height } = Dimensions.get('window');\n\nconst AnimatedImageBackground =\n  Animated.createAnimatedComponent(ImageBackground);\n\ninterface IManipulatorProps {\n  uri: string;\n  onUpdate: (newImage: any) => void;\n}\n\nconst options = {\n  compress: 1,\n  format: SaveFormat.JPEG,\n  base64: false,\n};\n\nexport default function Manipulator(props: IManipulatorProps) {\n  const { uri, onUpdate } = props;\n  const [imageUri, setImageUri] = useState(uri);\n  const cropperRef = useRef(null);\n  const [imageSize, setImageSize] = useState({ width: 0, height: 0 });\n  const [originXY, setOriginXY] = useState({ x: 0, y: 0 });\n  const {\n    // saveOptions,\n    manipulator: { visible, setVisible },\n  } = useProvider();\n\n  // shouldSetNewImageSize\n  useEffect(() => {\n    (async () => {\n      const resized = await getImageLayout(imageUri, width, height - 240);\n      setImageSize(resized);\n      resetCropper();\n    })();\n  }, [imageUri]);\n\n  const handleDone = async () => {\n    if (cropperRef && cropperRef.current) {\n      const croppedImage = await cropImage(\n        imageUri,\n        await (cropperRef.current as any).getCroppedData(imageUri),\n        options\n      );\n      onUpdate(croppedImage);\n      setImageUri(croppedImage.uri);\n      setVisible(false);\n    }\n  };\n\n  const handleRotate = async () => {\n    const rotatedResult = await rotateImage(imageUri, options);\n    setImageUri(rotatedResult.uri);\n  };\n\n  const handleReset = () => {\n    resetCropper();\n  };\n\n  const resetCropper = () => {\n    if (cropperRef && cropperRef.current) (cropperRef.current as any).reset();\n  };\n\n  const onLayout = (event: LayoutChangeEvent) => {\n    const { width: layoutWidth, height: layoutHeight } =\n      event.nativeEvent.layout;\n    const x = (width - layoutWidth) / 2;\n    const y = (height - layoutHeight) / 2;\n    setOriginXY({ x, y });\n  };\n\n  return (\n    <FadeView visible={visible} style={styles.fadeView}>\n      <SafeAreaView style={styles.container}>\n        <Row style={styles.header}>\n          <Label onPress={handleReset}>重設</Label>\n          <Label onPress={handleDone}>完成</Label>\n        </Row>\n        <View style={styles.content}>\n          {imageSize.width && imageSize.height ? (\n            <Cropper\n              ref={cropperRef}\n              imageWidth={imageSize.width}\n              imageHeight={imageSize.height}\n              originX={originXY.x}\n              originY={originXY.y}\n            >\n              <AnimatedImageBackground\n                onLayout={onLayout}\n                source={{ uri: imageUri }}\n                style={[\n                  {\n                    width: imageSize.width,\n                    height: imageSize.height,\n                  },\n                ]}\n              />\n            </Cropper>\n          ) : null}\n        </View>\n\n        <Row style={styles.footer}>\n          <Label onPress={handleRotate}>旋轉</Label>\n        </Row>\n      </SafeAreaView>\n    </FadeView>\n  );\n}\n"]}