{"version":3,"sources":["Provider.tsx"],"names":["React","initialState","imageUri","setImageUri","manipulator","visible","label","setVisible","EditorContext","createContext","Provider","props","uri","children","useState","Consumer","useProvider","useContext"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAYA,MAAMC,YAAoB,GAAG;AAC3BC,EAAAA,QAAQ,EAAE,EADiB;AAE3BC,EAAAA,WAAW,EAAE,MAAM,CAAE,CAFM;AAG3BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,OAAO,EAAE,KADE;AAEXC,IAAAA,KAAK,EAAE,QAFI;AAGXC,IAAAA,UAAU,EAAE,MAAM,CAAE;AAHT;AAHc,CAA7B;AAeA,OAAO,MAAMC,aAAa,gBAAGR,KAAK,CAACS,aAAN,CAAoBR,YAApB,CAAtB;AACP,OAAO,MAAMS,QAAQ,GAAIC,KAAD,IAA2B;AACjD,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAoBF,KAA1B;AACA,QAAM,CAACT,QAAD,EAAWC,WAAX,IAA0BH,KAAK,CAACc,QAAN,CAAeF,GAAf,CAAhC;AACA,QAAM,CAACP,OAAD,EAAUE,UAAV,IAAwBP,KAAK,CAACc,QAAN,CAAe,KAAf,CAA9B;AAEA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLZ,MAAAA,QADK;AAELC,MAAAA,WAFK;AAGLC,MAAAA,WAAW,EAAE;AACXC,QAAAA,OADW;AAEXE,QAAAA,UAFW;AAGXD,QAAAA,KAAK,EAAE;AAHI;AAHR;AADT,KAWGO,QAXH,CADF;AAeD,CApBM;AAqBP,OAAO,MAAME,QAAQ,GAAGP,aAAa,CAACO,QAA/B;AACP,OAAO,MAAMC,WAAW,GAAG,MAAMhB,KAAK,CAACiB,UAAN,CAAiBT,aAAjB,CAA1B","sourcesContent":["// src/components/Provider.tsx\nimport React from 'react';\n\ninterface IState {\n  imageUri: string;\n  setImageUri: React.Dispatch<any>;\n  manipulator: {\n    visible: boolean;\n    label: string;\n    setVisible: React.Dispatch<any>;\n  };\n}\n\nconst initialState: IState = {\n  imageUri: '',\n  setImageUri: () => {},\n  manipulator: {\n    visible: false,\n    label: 'Rotate',\n    setVisible: () => {},\n  },\n};\n\ninterface IProviderProps {\n  children: React.ReactNode;\n  uri: string;\n}\n\nexport const EditorContext = React.createContext(initialState);\nexport const Provider = (props: IProviderProps) => {\n  const { uri, children } = props;\n  const [imageUri, setImageUri] = React.useState(uri);\n  const [visible, setVisible] = React.useState(false);\n\n  return (\n    <EditorContext.Provider\n      value={{\n        imageUri,\n        setImageUri,\n        manipulator: {\n          visible,\n          setVisible,\n          label: '',\n        },\n      }}\n    >\n      {children}\n    </EditorContext.Provider>\n  );\n};\nexport const Consumer = EditorContext.Consumer;\nexport const useProvider = () => React.useContext(EditorContext);\n"]}