{"version":3,"sources":["FadeView.tsx"],"names":["React","Animated","FadeView","Component","fadeAnim","Value","componentDidUpdate","timing","state","toValue","props","visible","duration","useNativeDriver","start","componentWillUnmount","render","children","style","getFadeStyle","opacity"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAQA,eAAe,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuD;AAAA;AAAA;;AAAA,mCAC5D;AACNC,MAAAA,QAAQ,EAAE,IAAIH,QAAQ,CAACI,KAAb,CAAmB,CAAnB;AADJ,KAD4D;AAAA;;AAKpEC,EAAAA,kBAAkB,GAAG;AACnBL,IAAAA,QAAQ,CAACM,MAAT,CAAgB,KAAKC,KAAL,CAAWJ,QAA3B,EAAqC;AACnCK,MAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAAX,GAAqB,CAArB,GAAyB,CADC;AAEnCC,MAAAA,QAAQ,EAAE,GAFyB;AAGnCC,MAAAA,eAAe,EAAE;AAHkB,KAArC,EAIGC,KAJH;AAKD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBd,IAAAA,QAAQ,CAACM,MAAT,CAAgB,KAAKC,KAAL,CAAWJ,QAA3B,EAAqC;AACnCK,MAAAA,OAAO,EAAE,CAD0B;AAEnCG,MAAAA,QAAQ,EAAE,GAFyB;AAGnCC,MAAAA,eAAe,EAAE;AAHkB,KAArC,EAIGC,KAJH;AAKD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA,OAAF;AAAWM,MAAAA,QAAX;AAAqBC,MAAAA;AAArB,QAA+B,KAAKR,KAA1C;;AAEA,UAAMS,YAAY,GAAG,OAAO;AAC1BC,MAAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWJ;AADM,KAAP,CAArB;;AAIA,wBACE,oBAAC,QAAD,CAAU,IAAV;AACE,MAAA,aAAa,EAAEO,OAAO,GAAG,MAAH,GAAY,MADpC;AAEE,MAAA,KAAK,EAAE,CAACQ,YAAY,EAAb,EAAiBD,KAAjB;AAFT,OAIGD,QAJH,CADF;AAQD;;AApCmE","sourcesContent":["// src/components/FadeView.tsx\nimport React from 'react';\nimport { Animated } from 'react-native';\n\ninterface IFadeViewProps {\n  children: React.ReactNode;\n  visible: boolean;\n  style: any;\n}\n\nexport default class FadeView extends React.Component<IFadeViewProps> {\n  state = {\n    fadeAnim: new Animated.Value(0),\n  };\n\n  componentDidUpdate() {\n    Animated.timing(this.state.fadeAnim, {\n      toValue: this.props.visible ? 1 : 0,\n      duration: 300,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  componentWillUnmount() {\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 0,\n      duration: 300,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  render() {\n    const { visible, children, style } = this.props;\n\n    const getFadeStyle = () => ({\n      opacity: this.state.fadeAnim,\n    });\n\n    return (\n      <Animated.View\n        pointerEvents={visible ? 'auto' : 'none'}\n        style={[getFadeStyle(), style]}\n      >\n        {children}\n      </Animated.View>\n    );\n  }\n}\n"]}